// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Burn extends ethereum.Event {
  get params(): Burn__Params {
    return new Burn__Params(this);
  }
}

export class Burn__Params {
  _event: Burn;

  constructor(event: Burn) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get positionRefId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tierId(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get tickLower(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get ownerAccRefId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get liquidityD8(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get feeAmount0(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get feeAmount1(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class CollectProtocol extends ethereum.Event {
  get params(): CollectProtocol__Params {
    return new CollectProtocol__Params(this);
  }
}

export class CollectProtocol__Params {
  _event: CollectProtocol;

  constructor(event: CollectProtocol) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CollectSettled extends ethereum.Event {
  get params(): CollectSettled__Params {
    return new CollectSettled__Params(this);
  }
}

export class CollectSettled__Params {
  _event: CollectSettled;

  constructor(event: CollectSettled) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get positionRefId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tierId(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get tickLower(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get ownerAccRefId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get liquidityD8(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get feeAmount0(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get feeAmount1(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipientAccRefId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class GovernanceUpdated extends ethereum.Event {
  get params(): GovernanceUpdated__Params {
    return new GovernanceUpdated__Params(this);
  }
}

export class GovernanceUpdated__Params {
  _event: GovernanceUpdated;

  constructor(event: GovernanceUpdated) {
    this._event = event;
  }

  get governance(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get positionRefId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tierId(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get tickLower(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get sender(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get senderAccRefId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get liquidityD8(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get token0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get poolId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class SetLimitOrderType extends ethereum.Event {
  get params(): SetLimitOrderType__Params {
    return new SetLimitOrderType__Params(this);
  }
}

export class SetLimitOrderType__Params {
  _event: SetLimitOrderType;

  constructor(event: SetLimitOrderType) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get positionRefId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tierId(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get tickLower(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tickUpper(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get limitOrderType(): i32 {
    return this._event.parameters[6].value.toI32();
  }
}

export class Settle extends ethereum.Event {
  get params(): Settle__Params {
    return new Settle__Params(this);
  }
}

export class Settle__Params {
  _event: Settle;

  constructor(event: Settle) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tierId(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get tickEnd(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get tickStart(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get liquidityD8(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Swap extends ethereum.Event {
  get params(): Swap__Params {
    return new Swap__Params(this);
  }
}

export class Swap__Params {
  _event: Swap;

  constructor(event: Swap) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get senderAccRefId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get recipientAccRefId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount0(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get amountInDistribution(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get amountOutDistribution(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get tierData(): Array<BigInt> {
    return this._event.parameters[9].value.toBigIntArray();
  }
}

export class UpdateDefaultParameters extends ethereum.Event {
  get params(): UpdateDefaultParameters__Params {
    return new UpdateDefaultParameters__Params(this);
  }
}

export class UpdateDefaultParameters__Params {
  _event: UpdateDefaultParameters;

  constructor(event: UpdateDefaultParameters) {
    this._event = event;
  }

  get tickSpacing(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get protocolFee(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class UpdatePool extends ethereum.Event {
  get params(): UpdatePool__Params {
    return new UpdatePool__Params(this);
  }
}

export class UpdatePool__Params {
  _event: UpdatePool;

  constructor(event: UpdatePool) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tickSpacing(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get protocolFee(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class UpdateTier extends ethereum.Event {
  get params(): UpdateTier__Params {
    return new UpdateTier__Params(this);
  }
}

export class UpdateTier__Params {
  _event: UpdateTier;

  constructor(event: UpdateTier) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tierId(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get sqrtGamma(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get sqrtPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get limitOrderTickSpacingMultiplier(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get senderAccRefId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class HubPositions__burnResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getAmount0(): BigInt {
    return this.value0;
  }

  getAmount1(): BigInt {
    return this.value1;
  }

  getFeeAmount0(): BigInt {
    return this.value2;
  }

  getFeeAmount1(): BigInt {
    return this.value3;
  }
}

export class HubPositions__burnInputParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get tierId(): i32 {
    return this[2].toI32();
  }

  get tickLower(): i32 {
    return this[3].toI32();
  }

  get tickUpper(): i32 {
    return this[4].toI32();
  }

  get liquidityD8(): BigInt {
    return this[5].toBigInt();
  }

  get positionRefId(): BigInt {
    return this[6].toBigInt();
  }

  get accRefId(): BigInt {
    return this[7].toBigInt();
  }

  get collectAllFees(): boolean {
    return this[8].toBoolean();
  }
}

export class HubPositions__collectSettledResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getAmount0(): BigInt {
    return this.value0;
  }

  getAmount1(): BigInt {
    return this.value1;
  }

  getFeeAmount0(): BigInt {
    return this.value2;
  }

  getFeeAmount1(): BigInt {
    return this.value3;
  }
}

export class HubPositions__collectSettledInputParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get tierId(): i32 {
    return this[2].toI32();
  }

  get tickLower(): i32 {
    return this[3].toI32();
  }

  get tickUpper(): i32 {
    return this[4].toI32();
  }

  get liquidityD8(): BigInt {
    return this[5].toBigInt();
  }

  get positionRefId(): BigInt {
    return this[6].toBigInt();
  }

  get accRefId(): BigInt {
    return this[7].toBigInt();
  }

  get collectAllFees(): boolean {
    return this[8].toBoolean();
  }
}

export class HubPositions__getAllTiersResultValue0Struct extends ethereum.Tuple {
  get liquidity(): BigInt {
    return this[0].toBigInt();
  }

  get sqrtPrice(): BigInt {
    return this[1].toBigInt();
  }

  get sqrtGamma(): i32 {
    return this[2].toI32();
  }

  get tick(): i32 {
    return this[3].toI32();
  }

  get nextTickBelow(): i32 {
    return this[4].toI32();
  }

  get nextTickAbove(): i32 {
    return this[5].toI32();
  }

  get feeGrowthGlobal0(): BigInt {
    return this[6].toBigInt();
  }

  get feeGrowthGlobal1(): BigInt {
    return this[7].toBigInt();
  }
}

export class HubPositions__getPositionFeeGrowthInsideResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getFeeGrowthInside0(): BigInt {
    return this.value0;
  }

  getFeeGrowthInside1(): BigInt {
    return this.value1;
  }
}

export class HubPositions__getSettlementResult {
  value0: BigInt;
  value1: i32;
  value2: BigInt;

  constructor(value0: BigInt, value1: i32, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getLiquidityD8(): BigInt {
    return this.value0;
  }

  getTickSpacing(): i32 {
    return this.value1;
  }

  getNextSnapshotId(): BigInt {
    return this.value2;
  }
}

export class HubPositions__getSettlementSnapshotResultValue0Struct extends ethereum.Tuple {
  get feeGrowthInside0(): BigInt {
    return this[0].toBigInt();
  }

  get feeGrowthInside1(): BigInt {
    return this[1].toBigInt();
  }
}

export class HubPositions__mintResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAmount0(): BigInt {
    return this.value0;
  }

  getAmount1(): BigInt {
    return this.value1;
  }
}

export class HubPositions__mintInputParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get tierId(): i32 {
    return this[2].toI32();
  }

  get tickLower(): i32 {
    return this[3].toI32();
  }

  get tickUpper(): i32 {
    return this[4].toI32();
  }

  get liquidityD8(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get positionRefId(): BigInt {
    return this[7].toBigInt();
  }

  get senderAccRefId(): BigInt {
    return this[8].toBigInt();
  }

  get data(): Bytes {
    return this[9].toBytes();
  }
}

export class HubPositions__tokensResult {
  value0: i32;
  value1: BigInt;

  constructor(value0: i32, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getLocked(): i32 {
    return this.value0;
  }

  getProtocolFeeAmt(): BigInt {
    return this.value1;
  }
}

export class HubPositions__underlyingsResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getToken0(): Address {
    return this.value0;
  }

  getToken1(): Address {
    return this.value1;
  }
}

export class HubPositions extends ethereum.SmartContract {
  static bind(address: Address): HubPositions {
    return new HubPositions("HubPositions", address);
  }

  accounts(param0: Address, param1: Bytes): BigInt {
    let result = super.call("accounts", "accounts(address,bytes32):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromFixedBytes(param1)
    ]);

    return result[0].toBigInt();
  }

  try_accounts(param0: Address, param1: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accounts",
      "accounts(address,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  burn(params: HubPositions__burnInputParamsStruct): HubPositions__burnResult {
    let result = super.call(
      "burn",
      "burn((address,address,uint8,int24,int24,uint96,uint256,uint256,bool)):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );

    return new HubPositions__burnResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_burn(
    params: HubPositions__burnInputParamsStruct
  ): ethereum.CallResult<HubPositions__burnResult> {
    let result = super.tryCall(
      "burn",
      "burn((address,address,uint8,int24,int24,uint96,uint256,uint256,bool)):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__burnResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  collectProtocolFee(token: Address, recipient: Address): BigInt {
    let result = super.call(
      "collectProtocolFee",
      "collectProtocolFee(address,address):(uint256)",
      [ethereum.Value.fromAddress(token), ethereum.Value.fromAddress(recipient)]
    );

    return result[0].toBigInt();
  }

  try_collectProtocolFee(
    token: Address,
    recipient: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "collectProtocolFee",
      "collectProtocolFee(address,address):(uint256)",
      [ethereum.Value.fromAddress(token), ethereum.Value.fromAddress(recipient)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collectSettled(
    params: HubPositions__collectSettledInputParamsStruct
  ): HubPositions__collectSettledResult {
    let result = super.call(
      "collectSettled",
      "collectSettled((address,address,uint8,int24,int24,uint96,uint256,uint256,bool)):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );

    return new HubPositions__collectSettledResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_collectSettled(
    params: HubPositions__collectSettledInputParamsStruct
  ): ethereum.CallResult<HubPositions__collectSettledResult> {
    let result = super.tryCall(
      "collectSettled",
      "collectSettled((address,address,uint8,int24,int24,uint96,uint256,uint256,bool)):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__collectSettledResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getAllTiers(
    poolId: Bytes
  ): Array<HubPositions__getAllTiersResultValue0Struct> {
    let result = super.call(
      "getAllTiers",
      "getAllTiers(bytes32):((uint128,uint128,uint24,int24,int24,int24,uint80,uint80)[])",
      [ethereum.Value.fromFixedBytes(poolId)]
    );

    return result[0].toTupleArray<
      HubPositions__getAllTiersResultValue0Struct
    >();
  }

  try_getAllTiers(
    poolId: Bytes
  ): ethereum.CallResult<Array<HubPositions__getAllTiersResultValue0Struct>> {
    let result = super.tryCall(
      "getAllTiers",
      "getAllTiers(bytes32):((uint128,uint128,uint24,int24,int24,int24,uint80,uint80)[])",
      [ethereum.Value.fromFixedBytes(poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<HubPositions__getAllTiersResultValue0Struct>()
    );
  }

  getDefaultAllowedSqrtGammas(): Array<i32> {
    let result = super.call(
      "getDefaultAllowedSqrtGammas",
      "getDefaultAllowedSqrtGammas():(uint24[])",
      []
    );

    return result[0].toI32Array();
  }

  try_getDefaultAllowedSqrtGammas(): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getDefaultAllowedSqrtGammas",
      "getDefaultAllowedSqrtGammas():(uint24[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  getLimitOrderTickSpacingMultipliers(poolId: Bytes): Array<i32> {
    let result = super.call(
      "getLimitOrderTickSpacingMultipliers",
      "getLimitOrderTickSpacingMultipliers(bytes32):(uint8[])",
      [ethereum.Value.fromFixedBytes(poolId)]
    );

    return result[0].toI32Array();
  }

  try_getLimitOrderTickSpacingMultipliers(
    poolId: Bytes
  ): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getLimitOrderTickSpacingMultipliers",
      "getLimitOrderTickSpacingMultipliers(bytes32):(uint8[])",
      [ethereum.Value.fromFixedBytes(poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  getPoolAllowedSqrtGammas(poolId: Bytes): Array<i32> {
    let result = super.call(
      "getPoolAllowedSqrtGammas",
      "getPoolAllowedSqrtGammas(bytes32):(uint24[])",
      [ethereum.Value.fromFixedBytes(poolId)]
    );

    return result[0].toI32Array();
  }

  try_getPoolAllowedSqrtGammas(poolId: Bytes): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getPoolAllowedSqrtGammas",
      "getPoolAllowedSqrtGammas(bytes32):(uint24[])",
      [ethereum.Value.fromFixedBytes(poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  getPoolDefaultTickSpacing(poolId: Bytes): i32 {
    let result = super.call(
      "getPoolDefaultTickSpacing",
      "getPoolDefaultTickSpacing(bytes32):(uint8)",
      [ethereum.Value.fromFixedBytes(poolId)]
    );

    return result[0].toI32();
  }

  try_getPoolDefaultTickSpacing(poolId: Bytes): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getPoolDefaultTickSpacing",
      "getPoolDefaultTickSpacing(bytes32):(uint8)",
      [ethereum.Value.fromFixedBytes(poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getPositionFeeGrowthInside(
    poolId: Bytes,
    owner: Address,
    positionRefId: BigInt,
    tierId: i32,
    tickLower: i32,
    tickUpper: i32
  ): HubPositions__getPositionFeeGrowthInsideResult {
    let result = super.call(
      "getPositionFeeGrowthInside",
      "getPositionFeeGrowthInside(bytes32,address,uint256,uint8,int24,int24):(uint80,uint80)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(positionRefId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromI32(tickLower),
        ethereum.Value.fromI32(tickUpper)
      ]
    );

    return new HubPositions__getPositionFeeGrowthInsideResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPositionFeeGrowthInside(
    poolId: Bytes,
    owner: Address,
    positionRefId: BigInt,
    tierId: i32,
    tickLower: i32,
    tickUpper: i32
  ): ethereum.CallResult<HubPositions__getPositionFeeGrowthInsideResult> {
    let result = super.tryCall(
      "getPositionFeeGrowthInside",
      "getPositionFeeGrowthInside(bytes32,address,uint256,uint8,int24,int24):(uint80,uint80)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(positionRefId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromI32(tickLower),
        ethereum.Value.fromI32(tickUpper)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__getPositionFeeGrowthInsideResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getSettlement(
    poolId: Bytes,
    tierId: i32,
    tick: i32,
    zeroForOne: boolean
  ): HubPositions__getSettlementResult {
    let result = super.call(
      "getSettlement",
      "getSettlement(bytes32,uint8,int24,bool):(uint96,uint16,uint32)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromI32(tick),
        ethereum.Value.fromBoolean(zeroForOne)
      ]
    );

    return new HubPositions__getSettlementResult(
      result[0].toBigInt(),
      result[1].toI32(),
      result[2].toBigInt()
    );
  }

  try_getSettlement(
    poolId: Bytes,
    tierId: i32,
    tick: i32,
    zeroForOne: boolean
  ): ethereum.CallResult<HubPositions__getSettlementResult> {
    let result = super.tryCall(
      "getSettlement",
      "getSettlement(bytes32,uint8,int24,bool):(uint96,uint16,uint32)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromI32(tick),
        ethereum.Value.fromBoolean(zeroForOne)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__getSettlementResult(
        value[0].toBigInt(),
        value[1].toI32(),
        value[2].toBigInt()
      )
    );
  }

  getSettlementSnapshot(
    poolId: Bytes,
    tierId: i32,
    tick: i32,
    zeroForOne: boolean,
    snapshotId: BigInt
  ): HubPositions__getSettlementSnapshotResultValue0Struct {
    let result = super.call(
      "getSettlementSnapshot",
      "getSettlementSnapshot(bytes32,uint8,int24,bool,uint32):((uint80,uint80))",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromI32(tick),
        ethereum.Value.fromBoolean(zeroForOne),
        ethereum.Value.fromUnsignedBigInt(snapshotId)
      ]
    );

    return changetype<HubPositions__getSettlementSnapshotResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getSettlementSnapshot(
    poolId: Bytes,
    tierId: i32,
    tick: i32,
    zeroForOne: boolean,
    snapshotId: BigInt
  ): ethereum.CallResult<
    HubPositions__getSettlementSnapshotResultValue0Struct
  > {
    let result = super.tryCall(
      "getSettlementSnapshot",
      "getSettlementSnapshot(bytes32,uint8,int24,bool,uint32):((uint80,uint80))",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromI32(tick),
        ethereum.Value.fromBoolean(zeroForOne),
        ethereum.Value.fromUnsignedBigInt(snapshotId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<HubPositions__getSettlementSnapshotResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getTickMapBlock(poolId: Bytes, tierId: i32, blockIdx: BigInt): BigInt {
    let result = super.call(
      "getTickMapBlock",
      "getTickMapBlock(bytes32,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromUnsignedBigInt(blockIdx)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTickMapBlock(
    poolId: Bytes,
    tierId: i32,
    blockIdx: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTickMapBlock",
      "getTickMapBlock(bytes32,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromUnsignedBigInt(blockIdx)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTickMapBlockMap(poolId: Bytes, tierId: i32): BigInt {
    let result = super.call(
      "getTickMapBlockMap",
      "getTickMapBlockMap(bytes32,uint8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId))
      ]
    );

    return result[0].toBigInt();
  }

  try_getTickMapBlockMap(
    poolId: Bytes,
    tierId: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTickMapBlockMap",
      "getTickMapBlockMap(bytes32,uint8):(uint256)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTickMapWord(poolId: Bytes, tierId: i32, wordIdx: BigInt): BigInt {
    let result = super.call(
      "getTickMapWord",
      "getTickMapWord(bytes32,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromUnsignedBigInt(wordIdx)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTickMapWord(
    poolId: Bytes,
    tierId: i32,
    wordIdx: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTickMapWord",
      "getTickMapWord(bytes32,uint8,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(poolId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tierId)),
        ethereum.Value.fromUnsignedBigInt(wordIdx)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxNumOfTiers(): BigInt {
    let result = super.call("maxNumOfTiers", "maxNumOfTiers():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxNumOfTiers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxNumOfTiers",
      "maxNumOfTiers():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mint(params: HubPositions__mintInputParamsStruct): HubPositions__mintResult {
    let result = super.call(
      "mint",
      "mint((address,address,uint8,int24,int24,uint96,address,uint256,uint256,bytes)):(uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );

    return new HubPositions__mintResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_mint(
    params: HubPositions__mintInputParamsStruct
  ): ethereum.CallResult<HubPositions__mintResult> {
    let result = super.tryCall(
      "mint",
      "mint((address,address,uint8,int24,int24,uint96,address,uint256,uint256,bytes)):(uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__mintResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  tokens(param0: Address): HubPositions__tokensResult {
    let result = super.call("tokens", "tokens(address):(uint8,uint248)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return new HubPositions__tokensResult(
      result[0].toI32(),
      result[1].toBigInt()
    );
  }

  try_tokens(param0: Address): ethereum.CallResult<HubPositions__tokensResult> {
    let result = super.tryCall("tokens", "tokens(address):(uint8,uint248)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__tokensResult(value[0].toI32(), value[1].toBigInt())
    );
  }

  underlyings(param0: Bytes): HubPositions__underlyingsResult {
    let result = super.call(
      "underlyings",
      "underlyings(bytes32):(address,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new HubPositions__underlyingsResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_underlyings(
    param0: Bytes
  ): ethereum.CallResult<HubPositions__underlyingsResult> {
    let result = super.tryCall(
      "underlyings",
      "underlyings(bytes32):(address,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HubPositions__underlyingsResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get params(): BurnCallParamsStruct {
    return changetype<BurnCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get amount0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get feeAmount0(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get feeAmount1(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class BurnCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get tierId(): i32 {
    return this[2].toI32();
  }

  get tickLower(): i32 {
    return this[3].toI32();
  }

  get tickUpper(): i32 {
    return this[4].toI32();
  }

  get liquidityD8(): BigInt {
    return this[5].toBigInt();
  }

  get positionRefId(): BigInt {
    return this[6].toBigInt();
  }

  get accRefId(): BigInt {
    return this[7].toBigInt();
  }

  get collectAllFees(): boolean {
    return this[8].toBoolean();
  }
}

export class CollectProtocolFeeCall extends ethereum.Call {
  get inputs(): CollectProtocolFeeCall__Inputs {
    return new CollectProtocolFeeCall__Inputs(this);
  }

  get outputs(): CollectProtocolFeeCall__Outputs {
    return new CollectProtocolFeeCall__Outputs(this);
  }
}

export class CollectProtocolFeeCall__Inputs {
  _call: CollectProtocolFeeCall;

  constructor(call: CollectProtocolFeeCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CollectProtocolFeeCall__Outputs {
  _call: CollectProtocolFeeCall;

  constructor(call: CollectProtocolFeeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CollectSettledCall extends ethereum.Call {
  get inputs(): CollectSettledCall__Inputs {
    return new CollectSettledCall__Inputs(this);
  }

  get outputs(): CollectSettledCall__Outputs {
    return new CollectSettledCall__Outputs(this);
  }
}

export class CollectSettledCall__Inputs {
  _call: CollectSettledCall;

  constructor(call: CollectSettledCall) {
    this._call = call;
  }

  get params(): CollectSettledCallParamsStruct {
    return changetype<CollectSettledCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CollectSettledCall__Outputs {
  _call: CollectSettledCall;

  constructor(call: CollectSettledCall) {
    this._call = call;
  }

  get amount0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get feeAmount0(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get feeAmount1(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class CollectSettledCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get tierId(): i32 {
    return this[2].toI32();
  }

  get tickLower(): i32 {
    return this[3].toI32();
  }

  get tickUpper(): i32 {
    return this[4].toI32();
  }

  get liquidityD8(): BigInt {
    return this[5].toBigInt();
  }

  get positionRefId(): BigInt {
    return this[6].toBigInt();
  }

  get accRefId(): BigInt {
    return this[7].toBigInt();
  }

  get collectAllFees(): boolean {
    return this[8].toBoolean();
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get params(): MintCallParamsStruct {
    return changetype<MintCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get amount0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amount1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class MintCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get tierId(): i32 {
    return this[2].toI32();
  }

  get tickLower(): i32 {
    return this[3].toI32();
  }

  get tickUpper(): i32 {
    return this[4].toI32();
  }

  get liquidityD8(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get positionRefId(): BigInt {
    return this[7].toBigInt();
  }

  get senderAccRefId(): BigInt {
    return this[8].toBigInt();
  }

  get data(): Bytes {
    return this[9].toBytes();
  }
}

export class SetDefaultAllowedSqrtGammasCall extends ethereum.Call {
  get inputs(): SetDefaultAllowedSqrtGammasCall__Inputs {
    return new SetDefaultAllowedSqrtGammasCall__Inputs(this);
  }

  get outputs(): SetDefaultAllowedSqrtGammasCall__Outputs {
    return new SetDefaultAllowedSqrtGammasCall__Outputs(this);
  }
}

export class SetDefaultAllowedSqrtGammasCall__Inputs {
  _call: SetDefaultAllowedSqrtGammasCall;

  constructor(call: SetDefaultAllowedSqrtGammasCall) {
    this._call = call;
  }

  get sqrtGammas(): Array<i32> {
    return this._call.inputValues[0].value.toI32Array();
  }
}

export class SetDefaultAllowedSqrtGammasCall__Outputs {
  _call: SetDefaultAllowedSqrtGammasCall;

  constructor(call: SetDefaultAllowedSqrtGammasCall) {
    this._call = call;
  }
}

export class SetDefaultParametersCall extends ethereum.Call {
  get inputs(): SetDefaultParametersCall__Inputs {
    return new SetDefaultParametersCall__Inputs(this);
  }

  get outputs(): SetDefaultParametersCall__Outputs {
    return new SetDefaultParametersCall__Outputs(this);
  }
}

export class SetDefaultParametersCall__Inputs {
  _call: SetDefaultParametersCall;

  constructor(call: SetDefaultParametersCall) {
    this._call = call;
  }

  get tickSpacing(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get protocolFee(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetDefaultParametersCall__Outputs {
  _call: SetDefaultParametersCall;

  constructor(call: SetDefaultParametersCall) {
    this._call = call;
  }
}

export class SetGovernanceCall extends ethereum.Call {
  get inputs(): SetGovernanceCall__Inputs {
    return new SetGovernanceCall__Inputs(this);
  }

  get outputs(): SetGovernanceCall__Outputs {
    return new SetGovernanceCall__Outputs(this);
  }
}

export class SetGovernanceCall__Inputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernanceCall__Outputs {
  _call: SetGovernanceCall;

  constructor(call: SetGovernanceCall) {
    this._call = call;
  }
}

export class SetLimitOrderTypeCall extends ethereum.Call {
  get inputs(): SetLimitOrderTypeCall__Inputs {
    return new SetLimitOrderTypeCall__Inputs(this);
  }

  get outputs(): SetLimitOrderTypeCall__Outputs {
    return new SetLimitOrderTypeCall__Outputs(this);
  }
}

export class SetLimitOrderTypeCall__Inputs {
  _call: SetLimitOrderTypeCall;

  constructor(call: SetLimitOrderTypeCall) {
    this._call = call;
  }

  get token0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tierId(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get tickLower(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get tickUpper(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get positionRefId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get limitOrderType(): i32 {
    return this._call.inputValues[6].value.toI32();
  }
}

export class SetLimitOrderTypeCall__Outputs {
  _call: SetLimitOrderTypeCall;

  constructor(call: SetLimitOrderTypeCall) {
    this._call = call;
  }
}

export class SetPoolAllowedSqrtGammasCall extends ethereum.Call {
  get inputs(): SetPoolAllowedSqrtGammasCall__Inputs {
    return new SetPoolAllowedSqrtGammasCall__Inputs(this);
  }

  get outputs(): SetPoolAllowedSqrtGammasCall__Outputs {
    return new SetPoolAllowedSqrtGammasCall__Outputs(this);
  }
}

export class SetPoolAllowedSqrtGammasCall__Inputs {
  _call: SetPoolAllowedSqrtGammasCall;

  constructor(call: SetPoolAllowedSqrtGammasCall) {
    this._call = call;
  }

  get poolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get sqrtGammas(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class SetPoolAllowedSqrtGammasCall__Outputs {
  _call: SetPoolAllowedSqrtGammasCall;

  constructor(call: SetPoolAllowedSqrtGammasCall) {
    this._call = call;
  }
}

export class SetPoolDefaultTickSpacingCall extends ethereum.Call {
  get inputs(): SetPoolDefaultTickSpacingCall__Inputs {
    return new SetPoolDefaultTickSpacingCall__Inputs(this);
  }

  get outputs(): SetPoolDefaultTickSpacingCall__Outputs {
    return new SetPoolDefaultTickSpacingCall__Outputs(this);
  }
}

export class SetPoolDefaultTickSpacingCall__Inputs {
  _call: SetPoolDefaultTickSpacingCall;

  constructor(call: SetPoolDefaultTickSpacingCall) {
    this._call = call;
  }

  get poolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get tickSpacing(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetPoolDefaultTickSpacingCall__Outputs {
  _call: SetPoolDefaultTickSpacingCall;

  constructor(call: SetPoolDefaultTickSpacingCall) {
    this._call = call;
  }
}

export class SetPoolParametersCall extends ethereum.Call {
  get inputs(): SetPoolParametersCall__Inputs {
    return new SetPoolParametersCall__Inputs(this);
  }

  get outputs(): SetPoolParametersCall__Outputs {
    return new SetPoolParametersCall__Outputs(this);
  }
}

export class SetPoolParametersCall__Inputs {
  _call: SetPoolParametersCall;

  constructor(call: SetPoolParametersCall) {
    this._call = call;
  }

  get poolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get tickSpacing(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get protocolFee(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetPoolParametersCall__Outputs {
  _call: SetPoolParametersCall;

  constructor(call: SetPoolParametersCall) {
    this._call = call;
  }
}

export class SetTierParametersCall extends ethereum.Call {
  get inputs(): SetTierParametersCall__Inputs {
    return new SetTierParametersCall__Inputs(this);
  }

  get outputs(): SetTierParametersCall__Outputs {
    return new SetTierParametersCall__Outputs(this);
  }
}

export class SetTierParametersCall__Inputs {
  _call: SetTierParametersCall;

  constructor(call: SetTierParametersCall) {
    this._call = call;
  }

  get poolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get tierId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get sqrtGamma(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get limitOrderTickSpacingMultiplier(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class SetTierParametersCall__Outputs {
  _call: SetTierParametersCall;

  constructor(call: SetTierParametersCall) {
    this._call = call;
  }
}
